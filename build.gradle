dependencies {

}

allprojects {
    apply plugin: 'java'
    compileJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    apply plugin: 'maven'
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "application"

    group 'ch.redmonkeyass.zombieinvasion'
    version '1.0-SNAPSHOT'

}

subprojects {
    def kotlin_version = '1.0.5-2'
    def gdxVersion = "1.6.2"
    def log4jVersion = "2.3"
    def lwjglVersion = "2.9.3"
    def box2dLightsVersion = "1.3"

    repositories {
        mavenCentral()
        flatDir {
            dirs '../libs'
        }
        jcenter()
    }

    dependencies {
        compile "com.badlogicgames.gdx:gdx-box2d:${gdxVersion}"
        compile "com.badlogicgames.gdx:gdx-box2d-platform:${gdxVersion}:natives-desktop"

        compile "com.badlogicgames.gdx:gdx:${gdxVersion}"
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:${gdxVersion}"
        compile "com.badlogicgames.gdx:gdx-platform:${gdxVersion}:natives-desktop"
        compile "com.badlogicgames.box2dlights:box2dlights:${box2dLightsVersion}"

        compile group: "org.apache.logging.log4j", name: "log4j-api", version: "${log4jVersion}"
        compile group: "org.apache.logging.log4j", name: "log4j-core", version: "${log4jVersion}"
        compile "org.lwjgl.lwjgl:lwjgl:${lwjglVersion}"
        compile "org.jbox2d:jbox2d:2.1.2.2"

        compile 'com.google.code.gson:gson:2.3.1'

        compile 'com.typesafe:config:1.3.1'

        compile files("../libs/JBTCore.jar")
        compile files("../libs/slick.jar")
    }

    task natives(type: Sync) {
        from listNativePaths()
        into "$buildDir/natives"
    }

    task assembler(dependsOn: [
            natives
    ])
}

def listNativePaths() {
    ArrayList<Object> paths = new ArrayList<>();
    configurations.compile.each { file ->
        if (file.name.contains("natives")) {
            zipTree(file).matching {
                exclude {
                    it.path.contains('META-INF')
                }
            }.each {
                paths.add(it)
            }
        }
    }
    return paths
}